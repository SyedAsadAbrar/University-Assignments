<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Documents - Document Screen</title>
    <!-- Bootstrap CSS file -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <!-- CSS style file -->
    <link rel="stylesheet" type="text/css" href="../static/stylesheets/doc.css">

    <!-- FontAwesome icons -->
    <script src="https://kit.fontawesome.com/086f67fe00.js" crossorigin="anonymous"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.2/animate.min.css">
</head>
<body>
    <div id= "reg_alert" class="toast" data-autohide="false" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <span class= "my-2"><strong>File saved!</strong></span>
            <button type="button" class="my-2 ml-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
    <!-- Navigation bar -->
    <nav id="nav_bar" class="navbar navbar-expand-md sticky-top mt-5 animated slideInDown">
        <a href="/main" class="navbar-brand">
            <img class="logo" src="../static/images/logo.svg" height="32" alt="Documents.">
        </a>
        <button type="button" class="navbar-toggler ml-auto navbar-light" data-toggle="collapse" data-target="#navbarCollapse">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    File
                    </a>
                    <div id="file_dropdown" class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                        <a id="file_save" class="dropdown-item" href="#">Save</a>
                        <a id="file_download" class="dropdown-item" href="#">Download</a>                        
                        <a id="file_sign-out" class="dropdown-item" href="/signout">Sign out</a>
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Collaborate
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Help
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                </li>
            </ul>
        </div>
    </nav>

    <ul class="list-group list-group-horizontal" id="tool_bar">
        <li class="mr-1">
            <button type="button" class="btn tool do" id="button_undo" href="#" class="nav-link"><i class="fas fa-undo"></i></button>
        </li>
        <li>
            <button type="button" class="btn tool do" id="button_redo" href="#" class="nav-link"><i class="fas fa-redo"></i></button>
        </li>
        <!-- <li class="mr-1">
            <button type="button" class="btn" href="#" class="nav-link"><i class="fas fa-print"></i></button>
        </li> -->
        <div class="vertical-separator mx-3"></div>
        <div class="form-group mr-3">
            <!-- <label for="sel1">Font</label> -->
            <select class="custom-select" id="font_select">
                <option style="font-family:Arial;" value="Arial" selected = "selected">Arial</option>
                <option style="font-family:Montserrat;" value="Montserrat">Montserrat</option>
                <option style="font-family:Times New Roman;" value="Times New Roman">Times New Roman</option>
                <option style="font-family:Calibri;" value="Calibri">Calibri</option>
                <option style="font-family:Impact;" value="Impact">Impact</option>
            </select>
        </div>
        <div class="form-group">
            <!-- <label for="sel1">Font</label> -->
            <select class="custom-select" id="font-size_select">
                <option style="font-size: 10px;" value="10">10</option>
                <option style="font-size: 11px;" value="11">11</option>
                <option style="font-size: 12px;" value="12">12</option>
                <option style="font-size: 13px;" value="13">13</option>
                <option style="font-size: 14px;" value="14">14</option>
                <option style="font-size: 15px;" value="15" selected = "selected">15</option>
                <option style="font-size: 16px;" value="16">16</option>
                <option style="font-size: 17px;" value="17">17</option>
                <option style="font-size: 18px;" value="18">18</option>
                <option style="font-size: 19px;" value="19">19</option>
                <option style="font-size: 20px;" value="20">20</option>
                <option style="font-size: 21px;" value="21">21</option>
                <option style="font-size: 22px;" value="22">22</option>
                <option style="font-size: 23px;" value="23">23</option>
                <option style="font-size: 24px;" value="24">24</option>
                <option style="font-size: 25px;" value="25">25</option>
                <option style="font-size: 26px;" value="26">26</option>
                <option style="font-size: 27px;" value="27">27</option>
                <option style="font-size: 28px;" value="28">28</option>
                <option style="font-size: 29px;" value="29">29</option>
                <option style="font-size: 30px;" value="30">30</option>
                <option style="font-size: 31px;" value="31">31</option>
                <option style="font-size: 32px;" value="32">32</option>
                <option style="font-size: 33px;" value="33">33</option>
                <option style="font-size: 34px;" value="34">34</option>
                <option style="font-size: 35px;" value="35">35</option>
                <option style="font-size: 36px;" value="36">36</option>
                <option style="font-size: 37px;" value="37">37</option>
                <option style="font-size: 38px;" value="38">38</option>
                <option style="font-size: 39px;" value="39">39</option>
                <option style="font-size: 40px;" value="40">40</option>
            </select>
        </div>
        <div class="vertical-separator mx-3"></div>
        <li class="mr-1">
            <button type="button" class="btn tool format" id="button_bold" href="#" class="nav-link"><b>B</b></button>
        </li>
        <!-- <li class="nav-item disabled">
            <a href="#" class="nav-link" tabindex="-1">Reports</a>
        </li> -->
        <li class="mr-1">
            <button type="button" class="btn tool format" id="button_italicize" href="#" class="nav-link"><i style="font-family: serif;">I</i></button>
        </li>
        <li class="mr-1">
            <button type="button" class="btn tool format" id="button_underline" href="#" class="nav-link"><u>U</u></button>
        </li>
        <li class="mr-1">
            <button type="button" class="btn tool format" id="button_superscript" href="#" class="nav-link">X<sup>2</sup></button>
        </li>
        <li>
            <button type="button" class="btn tool format" id="button_subscript" href="#" class="nav-link">X<sub>2</sub></button>
        </li>
        <div class="vertical-separator mx-3"></div>
        <li class="mr-1">
            <button type="button" class="btn tool" id="button_text-hightlight" href="#" class="nav-link"><i class="fas fa-highlighter"></i></button>
        </li>
        <li class="mr-1">
            <button type="button" class="btn tool" id="button_text-color" href="#" class="nav-link"><i class="fas fa-font"></i></button>
        </li>
        <li id="text_color_selected_button">
            <input type="color" href="#" id="text_color_button" value="#000000">
        </li>
        <div class="vertical-separator mx-3"></div>
        <li class="mr-1">
            <button type="button" class="btn tool align" id="button_align-left" href="#" class="nav-link"><i class="fas fa-align-left"></i></button>
        </li>
        <li class="mr-1">
            <button type="button" class="btn tool align" id="button_align-center" href="#" class="nav-link"><i class="fas fa-align-center"></i></button>
        </li>
        <li class="mr-1">
            <button type="button" class="btn tool align" id="button_align-right" href="#" class="nav-link"><i class="fas fa-align-right"></i></button>
        </li>
        <li class="mr-1">
            <button type="button" class="btn tool align" id="button_align-justify" href="#" class="nav-link"><i class="fas fa-align-justify"></i></button>
        </li>
    </ul>

    <form class="container-fluid pt-3" id="text_area_div">
        <div class="form-group">
            <div contenteditable="true" class="form-control" id="text_area" style="font-family:Arial; font-size: 15px"></div>
        </div>
    </form>
    
    <div class="container-fluid pb-3">
        <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
        </div>
        <p id="action_text">Action: <%= name %> Editing</p>
    </div>
   
    <!-- Footer -->
    <footer class="page-footer font-small mdb-color pt-4">

        <!-- Footer Links -->
        <div class="container text-center text-md-left">
    
        <!-- Footer links -->
        <div class="row text-center text-md-left mt-3 pb-3">
    
            <!-- Grid column -->
            <div class="col-md-3 col-lg-3 col-xl-3 mx-auto mt-2" id="first_col"> 
                <!-- Content -->
                <img class="mb-4 footer-logo" src="../static/images/logo.svg" height="28" alt="Documents.">
                <p>With Documents, you can write, edit, collaborate and share documents wherever you are. For Free.</p>
            </div>
            <!-- Grid column -->
    
            <hr class="w-100 clearfix d-md-none">
    
            <!-- Grid column -->
            <div class="col-md-3 col-lg-2 col-xl-2 mx-auto mt-2" id="second_col">
                <h6 class="footer-title text-uppercase mb-4 font-weight-bold">Support</h6>
                <p>
                    <a class="text-links" href="#!">Home</a>
                </p>
                <p>
                    <a class="text-links" href="#!">Profile</a>
                </p>
                <p>
                    <a class="text-links" href="#!">FAQs</a>
                </p>
            </div>
    
            <!-- Grid column -->
            <hr class="w-100 clearfix d-md-none">
    
            <!-- Grid column -->
            <div class="col-md-4 col-lg-3 col-xl-3 mx-auto mt-2" id="third_col">
                <h6 class="footer-title text-uppercase mb-4 font-weight-bold">Contact</h6>
                <p>
                    <i class="fas fa-home mr-3"></i> <a href="https://goo.gl/maps/piHA57YGVPiy1k8F8">New York, NY 10012, US</a></p>
                <p>
                    <i class="fas fa-envelope mr-3"></i> <a href="mailto:syedasadabrar@gmail.com">sample@email.com</a></p>
                <p>
                    <i class="fas fa-phone mr-3"></i> <a href="tel:0123456788">+ 01 234 567 88</a></p>
            </div>
            <!-- Grid column -->
    
        </div>
        <!-- Footer links -->
    
        <hr>
    
        <!-- Grid row -->
        <div class="row d-flex align-items-center">
    
            <!-- Grid column -->
            <div class="col-md-7 col-lg-8">
    
            <!--Copyright-->
            <p class="text-center text-md-left">© 2020 Copyright:
                <strong> Syed Asad Abrar, Haider Nadeem Mirza</strong>
            </p>
    
            </div>
            <!-- Grid column -->
    
            <!-- Grid column -->
            <div class="col-md-5 col-lg-4 ml-lg-0">
    
            <!-- Social buttons -->
            <div class="text-center text-md-right">
                <ul class="list-unstyled list-inline">
                <li class="list-inline-item">
                    <a class="btn btn-sm rgba-white-slight mx-1">
                    <i class="fab fa-facebook social-media-icon"></i>
                    </a>
                </li>
                <li class="list-inline-item">
                    <a class="btn btn-sm rgba-white-slight mx-1">
                    <i class="fab fa-twitter social-media-icon"></i>
                    </a>
                </li>
                <li class="list-inline-item">
                    <a class="btn btn-sm rgba-white-slight mx-1">
                    <i class="fab fa-instagram social-media-icon"></i>
                    </a>
                </li>
                <li class="list-inline-item">
                    <a class="btn btn-sm rgba-white-slight mx-1">
                    <i class="fab fa-linkedin social-media-icon"></i>
                    </a>
                </li>
                </ul>
            </div>
    
            </div>
            <!-- Grid column -->
    
        </div>
        <!-- Grid row -->
    
        </div>
        <!-- Footer Links -->
    
    </footer>
    <!-- Footer -->
    
    <!-- Tool bar functionality -->
    <script src="../scripts/toolbar.js"></script>

    <!-- Text area functionality -->
    <!-- <script src="../scripts/text.js"></script> -->

    <!-- JS files: jQuery first, then Popper.js, then Bootstrap JS -->

    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

    <% var text = doc.content; %>

    <script>
        element = document.getElementById("file_save");
        
        element.addEventListener("click", function(){
            content = document.getElementById("text_area").innerHTML;

            var formData = {
                content: content
            }
                    
            $.ajax({
                type : "POST",
                contentType : "application/json",
                url : window.location + "/save",
                data : JSON.stringify(formData),
                dataType : 'json',
                success : function(user) {
                    console.log("Document saved");
                    console.log(user);
                    $("#reg_alert").toast('show');
                },
                error : function(e) { 
                    console.log(e);  
                }
            });
        });
    
        div = document.getElementById("text_area");
        
        div.innerHTML = "<%- text %>";
    </script>

    <script>

        format_buttons = {"button_bold" : {name: "bold", tag: "b"}, 
        "button_italicize" : {name: "italicize", tag: "I"}, 
        "button_underline" : {name: "underline", tag: "U"}, 
        "button_superscript" : {name: "superscript", tag: "sup"}, 
        "button_subscript" : {name: "subscript", tag: "sub"}}

        color_buttons = {"button_text-hightlight": {name: "highlight"}, 
        "button_text-color" :{name: "text"}}

        do_buttons = {"button_undo": {name: "undo"},
        "button_redo": {name: "redo"}}

        align_buttons = {"button_align-left": {name:"left"},
        "button_align-center": {name:"center"},
        "button_align-right": {name:"right"},
        "button_align-justify": {name:"justify"}}

        document.getElementById("button_align-left").classList.add("active");

        document.getElementById("button_undo").disabled = true;
        document.getElementById("button_redo").disabled = true;

        var firstInput = false;

        btns = document.getElementsByClassName("tool");

        console.log(btns.length);

        var beforeText = "";
        var currentText = "";
        var afterText = "";

        // Toolbar buttons

        for (var i = 0; i < btns.length; i++){
            btns[i].addEventListener("click", function() {

                //beforeText = document.getElementById("text_area").innerHTML;

                console.log("Inside onClick function");
                // If a button is "activated", deactivate it on clicking
                if(this.classList.contains('active')){
                    // not applied to text align buttons
                    if(!this.classList.contains("align")){
                        this.classList.remove("active");
                    }
                }
                // If a button is not "activated", activate it on clicking
                else{
                    // not applied to undo or redo buttons
                    if(!this.classList.contains("do"))
                    {
                        this.classList.add("active");
                        
                        // deactivate other activated text align buttons if any
                        if(this.classList.contains("align")){
                            var alignBtns = document.getElementsByClassName("align");
                            for (let index = 0; index < alignBtns.length; index++) {
                                if (this != alignBtns[index] && alignBtns[index].classList.contains("active")){
                                    alignBtns[index].classList.remove("active");
                                }
                            }	
                        }

                        // deactivate subscript button if superscript button is activated
                        if(this.id == "button_superscript"){
                            if(document.getElementById("button_subscript").classList.contains("active")){
                                document.getElementById("button_subscript").classList.remove("active");
                            }
                        }

                        // deactivate superscript button if subscript button is activated
                        else if(this.id == "button_subscript"){
                            if(document.getElementById("button_superscript").classList.contains("active")){
                                document.getElementById("button_superscript").classList.remove("active");
                            }
                        }

                        // deactivate text color button if highlight button is activated
                        if(this.id == "button_text-hightlight"){
                            if(document.getElementById("button_text-color").classList.contains("active")){
                                document.getElementById("button_text-color").classList.remove("active");
                            }
                        }

                        // deactivate highlight button if text color button is activated
                        else if(this.id == "button_text-color"){
                            if(document.getElementById("button_text-hightlight").classList.contains("active")){
                                document.getElementById("button_text-hightlight").classList.remove("active");
                            }
                        }				
                    }
                }

                var selObj = window.getSelection();

                // if button selected is a formatting button
                if(format_buttons[this.id] != undefined){

                    //console.log(document.getElementById("text_area").childNodes[1] == window.getSelection().anchorNode.parentNode);

                    if(this.classList.contains("active"))
                    {
                        console.log("Selected text: " + selObj.toString());

                        if (selObj.anchorNode == selObj.focusNode){
                            var selected_string = selObj.toString();
                        
                            var range = selObj.getRangeAt(0);
                            range.deleteContents();

                            var h = document.createElement(format_buttons[this.id].tag);            
                            var t = document.createTextNode(selected_string);     

                            if (selected_string == ""){
                                t.nodeValue = "\u200C";
                            }

                            h.appendChild(t);   

                            range.insertNode(h);
                        }
                        else{
                            var first, second;
                            var offset1, offset2;

                            if(selObj.anchorNode.compareDocumentPosition(selObj.focusNode) == Node.DOCUMENT_POSITION_FOLLOWING){
                                first = selObj.anchorNode;
                                second = selObj.focusNode;
                                offset1 = selObj.anchorOffset;
                                offset2 = selObj.focusOffset;
                            }
                            //	If text is selected in reverse direction
                            else{
                                first = selObj.focusNode;
                                second = selObj.anchorNode;
                                offset1 = selObj.focusOffset;
                                offset2 = selObj.anchorOffset;
                            }

                            var prestring = first.nodeValue.substring(offset1, first.nodeValue.length);
                            var poststring = second.nodeValue.substring(0, offset2);

                            var preNode = document.createElement("text");
                            var postNode = document.createElement("text");

                            var	tempNode = first.parentNode;
                            
                            var tempNode2 = preNode;

                            //	To apply all previously applied formatting
                            while (tempNode!= null && tempNode.id != "text_area"){
                                // TODO: Add more buttons

                                // To activate those buttons which have been applied to the selected text i.e. bold button if text is bold-ed 
                                for (var key in format_buttons){
                                    if (tempNode.nodeName == format_buttons[key].tag.toUpperCase()){
                                        tempNode2.appendChild(document.createElement(format_buttons[key].tag));
                                        tempNode2 = tempNode2.childNodes[0];
                                        break;
                                    }
                                    // To retain text color after text formatting
                                    else if(tempNode.nodeName == "font".toUpperCase()){
                                        var temp = document.createElement("font");
                                        temp.style.color = tempNode.style.color;
                                        temp.style.background = tempNode.style.background;
                                        temp.style.fontFamily = tempNode.style.fontFamily;
                                        temp.style.fontSize = tempNode.style.fontSize;
                                        tempNode2.appendChild(temp);
                                        tempNode2 = tempNode2.childNodes[0];
                                        break;
                                    }
                                }
                                tempNode = tempNode.parentNode;
                            }

                            tempNode2.appendChild(document.createTextNode(prestring));

                            tempNode = second.parentNode;

                            tempNode2 = postNode;

                            //	To apply all previously applied formatting
                            while (tempNode!= null && tempNode.id != "text_area"){
                                // TODO: Add more buttons

                                // To activate those buttons which have been applied to the selected text i.e. bold button if text is bold-ed 
                                for (var key in format_buttons){
                                    if (tempNode.nodeName == format_buttons[key].tag.toUpperCase()){
                                        tempNode2.appendChild(document.createElement(format_buttons[key].tag));
                                        tempNode2 = tempNode2.childNodes[0];
                                        break;
                                    }
                                    // To retain text color after text formatting
                                    else if(tempNode.nodeName == "font".toUpperCase()){
                                        var temp = document.createElement("font");
                                        temp.style.color = tempNode.style.color;
                                        temp.style.background = tempNode.style.background;
                                        temp.style.fontFamily = tempNode.style.fontFamily;
                                        temp.style.fontSize = tempNode.style.fontSize;
                                        tempNode2.appendChild(temp);
                                        tempNode2 = tempNode2.childNodes[0];
                                        break;
                                    }
                                }
                                tempNode = tempNode.parentNode;
                            }

                            tempNode2.appendChild(document.createTextNode(poststring));

                            var node = document.createElement(format_buttons[this.id].tag);
                            node.appendChild(preNode);
                            node.appendChild(postNode);

                            var range = selObj.getRangeAt(0);
                            range.deleteContents();

                            if(node.length != 0){
                                range.insertNode(node);
                            }
                        }
                    }
                    // TODO: If button is unselected, remove formatting
                    else{
                    }
                }

                if(color_buttons[this.id] != undefined){
                    var value = document.getElementById("text_color_button").value;
                    
                    if(this.classList.contains("active")){
                        console.log("Selected text: " + selObj.toString());

                        if (selObj.anchorNode == selObj.focusNode){
                            // var string = document.getElementById("text_area").innerHTML;

                            // var prestring = string.substring(0, selObj.anchorOffset-1);
                            // var poststring = string.substring(selObj.focusOffset+1, string.length);

                            var selected_string = selObj.toString();

                            // document.getElementById("text_area").innerHTML = prestring + formattedstring + poststring;
                        
                            var range = selObj.getRangeAt(0);
                            range.deleteContents();

                            var h = document.createElement("font");  
                            
                            if(this.id == "button_text-color"){
                                h.style.color = value;
                            }
                            else{
                                h.style.background= value;
                            }

                            var t = document.createTextNode(selected_string);     
                            
                            if (selected_string == ""){
                                t.nodeValue = "\u200C";
                            }

                            h.appendChild(t);   

                            range.insertNode(h);
                        }
                        else{
                            var first, second;
                            var offset1, offset2;

                            if(selObj.anchorNode.compareDocumentPosition(selObj.focusNode) == Node.DOCUMENT_POSITION_FOLLOWING){
                                first = selObj.anchorNode;
                                second = selObj.focusNode;
                                offset1 = selObj.anchorOffset;
                                offset2 = selObj.focusOffset;
                            }
                            else{
                                first = selObj.focusNode;
                                second = selObj.anchorNode;
                                offset1 = selObj.focusOffset;
                                offset2 = selObj.anchorOffset;
                            }

                            var prestring = first.nodeValue.substring(offset1, first.nodeValue.length);
                            var poststring = second.nodeValue.substring(0, offset2);

                            var preNode = document.createElement("font");
                            var postNode = document.createElement("font");

                            var	tempNode = first.parentNode;
                            
                            var tempNode2 = preNode;

                            //	To apply all previously applied formatting
                            while (tempNode!= null && tempNode.id != "text_area"){
                                // TODO: Add more buttons

                                // To activate those buttons which have been applied to the selected text i.e. bold button if text is bold-ed 
                                for (var key in format_buttons){
                                    if (tempNode.nodeName == format_buttons[key].tag.toUpperCase()){
                                        tempNode2.appendChild(document.createElement(format_buttons[key].tag));
                                        tempNode2 = tempNode2.childNodes[0];
                                        break;
                                    }
                                    // To retain text color after text formatting
                                    else if(tempNode.nodeName == "font".toUpperCase()){
                                        var temp = document.createElement("font");
                                        temp.style.color = tempNode.style.color;
                                        temp.style.background = tempNode.style.background;
                                        temp.style.fontFamily = tempNode.style.fontFamily;
                                        temp.style.fontSize = tempNode.style.fontSize;
                                        tempNode2.appendChild(temp);
                                        break;
                                    }
                                }
                                tempNode = tempNode.parentNode;
                            }

                            tempNode2.appendChild(document.createTextNode(prestring));

                            tempNode = second.parentNode;

                            tempNode2 = postNode;

                            //	To apply all previously applied formatting
                            while (tempNode!= null && tempNode.id != "text_area"){
                                // TODO: Add more buttons

                                // To activate those buttons which have been applied to the selected text i.e. bold button if text is bold-ed 
                                for (var key in format_buttons){
                                    if (tempNode.nodeName == format_buttons[key].tag.toUpperCase()){
                                        tempNode2.appendChild(document.createElement(format_buttons[key].tag));
                                        tempNode2 = tempNode2.childNodes[0];
                                        break;
                                    }
                                    // To retain text color after text formatting
                                    else if(tempNode.nodeName == "font".toUpperCase()){
                                        var temp = document.createElement("font");
                                        temp.style.color = tempNode.style.color;
                                        temp.style.background = tempNode.style.background;
                                        temp.style.fontFamily = tempNode.style.fontFamily;
                                        temp.style.fontSize = tempNode.style.fontSize;
                                        tempNode2.appendChild(temp);
                                        break;
                                    }
                                }
                                tempNode = tempNode.parentNode;
                            }

                            tempNode2.appendChild(document.createTextNode(poststring));

                            var node = document.createElement("font");

                            if(this.id == "button_text-color"){
                                node.style.color = value;
                            }
                            else{
                                node.style.background = value;
                            }

                            node.appendChild(preNode);
                            node.appendChild(postNode);

                            var range = selObj.getRangeAt(0);
                            range.deleteContents();

                            if(node.length != 0){
                                range.insertNode(node);
                            }
                        }
                    }
                    // TODO: If button is unselected, remove formatting
                    else{
                    }
                }

                if(do_buttons[this.id] != undefined)
                {
                    if (do_buttons[this.id].name == "undo"){
                        afterText = currentText;
                        currentText = beforeText;
                        beforeText = "";

                        document.getElementById(this.id).disabled = true;
                        document.getElementById("button_redo").disabled = false;
                    }
                    else if (do_buttons[this.id].name == "redo"){
                        beforeText = currentText;
                        currentText = afterText;
                        afterText = "";

                        document.getElementById(this.id).disabled = true;
                        document.getElementById("button_undo").disabled = false;
                    }
                    document.getElementById("text_area").innerHTML = currentText;
                }

                if(align_buttons[this.id] != undefined)
                {
                    document.getElementById("text_area").style.textAlign = align_buttons[this.id].name;
                    document.getElementById("text_area").innerHTML = currentText;
                }

                // Correcting selection 
                // if(selObj.anchorNode.id == "text_area" || selObj.focusNode.id == "text_area"){
                // 	// To correct selection
                // 	// Since the selection is deleted so the focus node changes, this leads to a wrong selection
                // 	var node1;
                            
                // 	if (selObj.anchorNode.id == "text_area"){
                // 		node1 = selObj.focusNode.nextSibling.childNodes[0];
                // 	}
                // 	else if(selObj.focusNode.id == "text_area"){
                // 		node1 = selObj.anchorNode.nextSibling.childNodes[0];
                // 	}

                // 	if(selObj.anchorNode.id == "text_area" && selObj.focusNode.id == "text_area"){
                // 		node1 = selObj.anchorNode.childNodes[selObj.anchorOffset];
                // 	}

                // 	selObj.removeAllRanges();

                // 	var range = document.createRange();
                    
                // 	if (node1.nodeName != "#text"){
                // 		range.setStart(node1.childNodes[0], 0);
                // 		range.setEnd(node1.childNodes[node1.childElementCount-1], node1.childNodes[node1.childElementCount-1].lastChild.length);
                // 	}
                // 	else{
                // 		range.selectNodeContents(node1);
                // 	}

                // 	selObj.addRange(range);
                // }

                selObj.removeAllRanges();

                console.log("Text area: " + document.getElementById("text_area").innerHTML);

                beforeText = currentText;
                currentText = document.getElementById("text_area").innerHTML;
            });
        }

        // Text Area

        textarea = document.getElementById("text_area");

        textarea.addEventListener("input", function(){
            if(firstInput == false){
                firstInput = true;
                document.getElementById("button_undo").disabled = false;
            }

            console.log(document.getElementById("text_area").innerHTML);
            
            beforeText = currentText;
            currentText = document.getElementById("text_area").innerHTML;


            var bold = document.getElementById("button_bold");

            if (bold.classList.contains("active")){
                console.log("Bold button activated.");
                //this.innerHTML += "<b></b>";
                return;
            }
            //console.log("Bold button not activated.");
        });

        textarea.addEventListener("selectstart", function(){
            console.log("Selection started in targetDiv");
            document.addEventListener("selectionchange", logSelection);
        });

        textarea.addEventListener("mouseleave", () => {
            console.log("mouse leave event.");
            document.removeEventListener("selectionchange", logSelection);
        });

        function logSelection(){
            var selection = document.getSelection();
            //if(selection.toString().length != 0){
                console.log(selection.toString());

                var element = selection.anchorNode;

                // Removing "active" attribute on all selected buttons
                var btns = document.getElementsByClassName("tool");

                for (var i = 0; i < btns.length; i++){
                    if(btns[i].classList.contains("active")){
                        btns[i].classList.remove("active");
                    }
                }

                // && (selection.anchorOffset + 1 == selection.anchorNode.length || selection.focusOffset + 1 == selection.focusNode.length)

                if(selection.anchorNode != selection.focusNode)
                {
                    return;
                }

                while (element!= null && element.id != "text_area"){
                    // TODO: Add more buttons

                    // To activate those buttons which have been applied to the selected text i.e. bold button if text is bold-ed 
                    for (var key in format_buttons){
                        if (element.parentNode.nodeName == format_buttons[key].tag.toUpperCase()){
                            console.log(format_buttons[key].tag + " property found.");
                            document.getElementById(key).classList.add("active");
                        }
                    }

                    element = element.parentNode;
                }
            //}
        }


        // Font size

        fontSelect = document.getElementById("font_select");
        fontSizeSelect = document.getElementById("font-size_select");

        fontSelect.addEventListener("change", (event) => {
            var font = event.target.value;
            console.log("Font changed to " + font);
            changeFontSettings();
        });

        fontSizeSelect.addEventListener("change", (event) => {
            var size = event.target.value;
            console.log("Font size changed to " + size);
            changeFontSettings();	
        });

        function changeFontSettings(){
            var font = fontSelect.value;
            var size = fontSizeSelect.value +"px";

            var selObj = window.getSelection();

            console.log("Selected text: " + selObj.toString());

            if (selObj.anchorNode == selObj.focusNode){
                var selected_string = selObj.toString();
                
                var range = selObj.getRangeAt(0);
                range.deleteContents();

                var h = document.createElement("font");  
                            
                h.style.fontFamily = font;
                h.style.fontSize = size;
            
                var t = document.createTextNode(selected_string);     

                if (selected_string == ""){
                    t.nodeValue = "\u200C";
                }

                h.appendChild(t);   

                range.insertNode(h);
            }
            else{
                var first, second;
                var offset1, offset2;

                if(selObj.anchorNode.compareDocumentPosition(selObj.focusNode) == Node.DOCUMENT_POSITION_FOLLOWING){
                    first = selObj.anchorNode;
                    second = selObj.focusNode;
                    offset1 = selObj.anchorOffset;
                    offset2 = selObj.focusOffset;
                }
                else{
                    first = selObj.focusNode;
                    second = selObj.anchorNode;
                    offset1 = selObj.focusOffset;
                    offset2 = selObj.anchorOffset;
                }

                var prestring = first.nodeValue.substring(offset1, first.nodeValue.length);
                var poststring = second.nodeValue.substring(0, offset2);

                var preNode = document.createElement("font");
                var postNode = document.createElement("font");

                var	tempNode = first.parentNode;
                    
                var tempNode2 = preNode;

                //	To apply all previously applied formatting
                while (tempNode!= null && tempNode.id != "text_area"){
                    // TODO: Add more buttons

                    // To activate those buttons which have been applied to the selected text i.e. bold button if text is bold-ed 
                    for (var key in format_buttons){
                        if (tempNode.nodeName == format_buttons[key].tag.toUpperCase()){
                            tempNode2.appendChild(document.createElement(format_buttons[key].tag));
                            tempNode2 = tempNode2.childNodes[0];
                            break;
                        }
                        // To retain text color after text formatting
                        else if(tempNode.nodeName == "font".toUpperCase()){
                            var temp = document.createElement("font");
                            temp.style.color = tempNode.style.color;
                            temp.style.background = tempNode.style.background;
                            temp.style.fontFamily = tempNode.style.fontFamily;
                            temp.style.fontSize = tempNode.style.fontSize;
                            tempNode2.appendChild(temp);
                            break;
                        }
                    }
                    tempNode = tempNode.parentNode;
                }

                tempNode2.appendChild(document.createTextNode(prestring));

                tempNode = second.parentNode;

                tempNode2 = postNode;

                //	To apply all previously applied formatting
                while (tempNode!= null && tempNode.id != "text_area"){
                    // TODO: Add more buttons

                    // To activate those buttons which have been applied to the selected text i.e. bold button if text is bold-ed 
                    for (var key in format_buttons){
                        if (tempNode.nodeName == format_buttons[key].tag.toUpperCase()){
                            tempNode2.appendChild(document.createElement(format_buttons[key].tag));
                            tempNode2 = tempNode2.childNodes[0];
                            break;
                        }
                        // To retain text color after text formatting
                        else if(tempNode.nodeName == "font".toUpperCase()){
                            var temp = document.createElement("font");
                            temp.style.color = tempNode.style.color;
                            temp.style.background = tempNode.style.background;
                            temp.style.fontFamily = tempNode.style.fontFamily;
                            temp.style.fontSize = tempNode.style.fontSize;
                            tempNode2.appendChild(temp);
                            break;
                        }
                    }
                    tempNode = tempNode.parentNode;
                }

                tempNode2.appendChild(document.createTextNode(poststring));

                var node = document.createElement("font");

                node.style.color = value;

                node.appendChild(preNode);
                node.appendChild(postNode);

                var range = selObj.getRangeAt(0);
                range.deleteContents();

                if(node.length != 0){
                    range.insertNode(node);
                }
            }

            selObj.removeAllRanges();

            beforeText = currentText;
            currentText = document.getElementById("text_area").innerHTML;
        };

    </script>

</body>
</html>